"use strict";(self.webpackChunk_WESCO_International_synergy_dna=self.webpackChunk_WESCO_International_synergy_dna||[]).push([[979,573],{"./stories/css-mixins/grid/grid-row-span.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_grid_grid_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./stories/grid/grid.stories.js");const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{})})):_createMdxContent();function _createMdxContent(){const _components=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",h3:"h3"},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.h_,{title:"Synergy Design System/Developer Docs/Mixins/Grid/grid-row-span"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"grid-row-span",children:"grid-row-span"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"grid-row-span"})," mixin can be used to span grid row."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.oG,{of:_grid_grid_stories__WEBPACK_IMPORTED_MODULE_2__.SpanRows}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'<div class="grid-demo-span-rows">\n    <div>col (row 3)</div>\n    <div>col (span 9)</div>\n    <div>col (span 9)</div>\n    <div>col (span 9)</div>\n</div>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-css",children:".grid-demo-span-rows {\n    display: grid;\n    @mixin grid-cols 12;\n\n    & > div {\n        &:first-of-type {\n            @mixin grid-row-span 3;\n        }\n\n        &:not(:first-of-type) {\n            @mixin grid-col-span 11;\n        }\n    }\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"responsive-row-span",children:"Responsive Row Span"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The column span can be adjusted by breakpoint using the responsive versions of the row span mixins."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-css",children:"@mixin grid-{breakpoint}-row-span {rows};\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{className:"table margin-bottom",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children:"Parameter"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children:"Options"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"breakpoint"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"sm"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"md"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"lg"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"xl"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"xxl"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"rows"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children:"The number of rows to span"})]})]})]})}}},"./stories/grid/grid.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,Gap:()=>Gap,GapX:()=>GapX,GapY:()=>GapY,ResponsiveColumns:()=>ResponsiveColumns,SpanColumns:()=>SpanColumns,SpanRows:()=>SpanRows,TwelveColumns:()=>TwelveColumns,TwoColumns:()=>TwoColumns,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Synergy Design System/Demo/Grid"},Demo={render:({label,...args})=>'<div class="story grid-demo">\n      <div>\n        <div class="nav">Nav</div>\n        <div class="heading">Heading</div>\n        <div class="content">Content</div>\n        <div class="content">Content</div>\n        <div class="content">Content</div>\n        <div class="sidebar">Sidebar</div>\n      </div>\n    </div>\n    '},TwelveColumns={render:({label,...args})=>'<div class="story grid-demo-12-column">\n      <div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n      </div>\n    </div>\n    '},TwoColumns={render:({label,...args})=>'<div class="story grid-demo-2-column">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    '},SpanColumns={render:({label,...args})=>'<div class="story grid-demo-span-columns">\n      <div>\n          <div>col (span 3)</div>\n          <div>col (span 9)</div>\n          <div>col (span 3)</div>\n          <div>col (span 9)</div>\n      </div>\n    </div>\n    '},SpanRows={render:({label,...args})=>'<div class="story grid-demo-span-rows">\n      <div>\n        <div>col (row 3)</div>\n        <div>col (span 9)</div>\n        <div>col (span 9)</div>\n        <div>col (span 9)</div>\n      </div>\n    </div>\n    '},Gap={render:({label,...args})=>'<div class="story grid-demo-gap">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    '},GapX={render:({label,...args})=>'<div class="story grid-demo-gap-x">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    '},GapY={render:({label,...args})=>'<div class="story grid-demo-gap-y">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    '},ResponsiveColumns={render:({label,...args})=>'<div class="story grid-demo-responsive">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    '};Demo.parameters={...Demo.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo">\n      <div>\n        <div class="nav">Nav</div>\n        <div class="heading">Heading</div>\n        <div class="content">Content</div>\n        <div class="content">Content</div>\n        <div class="content">Content</div>\n        <div class="sidebar">Sidebar</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...Demo.parameters?.storySource}},TwelveColumns.parameters={...TwelveColumns.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-12-column">\n      <div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n        <div>col</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...TwelveColumns.parameters?.storySource}},TwoColumns.parameters={...TwoColumns.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-2-column">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...TwoColumns.parameters?.storySource}},SpanColumns.parameters={...SpanColumns.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-span-columns">\n      <div>\n          <div>col (span 3)</div>\n          <div>col (span 9)</div>\n          <div>col (span 3)</div>\n          <div>col (span 9)</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...SpanColumns.parameters?.storySource}},SpanRows.parameters={...SpanRows.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-span-rows">\n      <div>\n        <div>col (row 3)</div>\n        <div>col (span 9)</div>\n        <div>col (span 9)</div>\n        <div>col (span 9)</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...SpanRows.parameters?.storySource}},Gap.parameters={...Gap.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-gap">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...Gap.parameters?.storySource}},GapX.parameters={...GapX.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-gap-x">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...GapX.parameters?.storySource}},GapY.parameters={...GapY.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-gap-y">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...GapY.parameters?.storySource}},ResponsiveColumns.parameters={...ResponsiveColumns.parameters,storySource:{source:'{\n  render: ({\n    label,\n    ...args\n  }) => {\n    return (/* html */`<div class="story grid-demo-responsive">\n      <div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n          <div>col</div>\n      </div>\n    </div>\n    `\n    );\n  }\n}',...ResponsiveColumns.parameters?.storySource}}}}]);
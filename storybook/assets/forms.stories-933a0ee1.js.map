{"version":3,"file":"forms.stories-933a0ee1.js","sources":["../../docs/stories/forms/forms.stories.js"],"sourcesContent":["export default {\n  title: 'Synergy Design System/Atoms/Forms'\n};\nexport const TextField = {\n  args: {\n    label: 'First Name',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: false\n  },\n  render: ({\n    label,\n    required,\n    disabled,\n    help,\n    ...args\n  }) => {\n    // You can either use a function to create DOM elements or use a plain html string!\n    // return `<div>${label}</div>`;\n    return (/* html */`<form>\n              <div class=\"group\">\n                <label for=\"name\">${label}</label>\n                <input type=\"text\" id=\"name\" placeholder=\"Placeholder\" ${required ? 'required' : ''} ${disabled ? 'disabled' : ''}/>\n                <span>${help}</span>\n              </div>\n            </form>`\n    );\n  }\n};\nexport const TextArea = {\n  args: {\n    label: 'First Name',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: false\n  },\n  render: ({\n    label,\n    required,\n    disabled,\n    help,\n    ...args\n  }) => {\n    return (/* html */`<form>\n              <div class=\"group\">\n                <label for=\"name\">${label}</label>\n                <textarea type=\"text\" id=\"name\" placeholder=\"Placeholder\" ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''}></textarea>\n                <span>${help}</span>\n              </div>\n            </form>`\n    );\n  }\n};\nexport const Select = {\n  args: {\n    label: 'Favorite Car Manufacturer',\n    value: 'Airplane Mode',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: false\n  },\n  render: ({\n    label,\n    required,\n    disabled,\n    help,\n    value,\n    ...args\n  }) => {\n    return (/* html */`<form>\n              <div class=\"group\">\n                <label for=\"car\">${label}</label>\n                <div class=\"select\">\n                  <select id=\"car\" ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''}>\n                    <option value=\"\" disabled selected hidden>Select car:</option>\n                    <option value=\"1\">Audi</option>\n                    <option value=\"2\">BMW</option>\n                    <option value=\"3\">Citroen</option>\n                    <option value=\"4\">Ford</option>\n                    <option value=\"5\">Honda</option>\n                    <option value=\"6\">Jaguar</option>\n                    <option value=\"7\">Land Rover</option>\n                    <option value=\"8\">Mercedes</option>\n                    <option value=\"9\">Mini</option>\n                    <option value=\"10\">Nissan</option>\n                    <option value=\"11\">Toyota</option>\n                    <option value=\"12\">Volvo</option>\n                  </select>\n                </div>\n                <span>${help}</span>\n              </div>\n            </form>`\n    );\n  }\n};\nexport const Checkbox = {\n  args: {\n    label: 'Agree to Terms',\n    value: 'Completed Task',\n    help: 'A clever desciption of this field',\n    checked: false,\n    required: false,\n    disabled: false\n  },\n  render: ({\n    label,\n    required,\n    checked,\n    disabled,\n    help,\n    value,\n    ...args\n  }) => {\n    return (/* html */`<form>\n              <div class=\"group\">\n                <label for=\"terms\">${label}</label>\n                <div>\n                  <input type=\"checkbox\" id=\"terms\" ${checked ? 'checked' : ''}  ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''} onclick=\"(event) => event.target.checked = true\">\n                  <label for=\"terms\">${value}</label>\n                </div>\n                <span>${help}</span>\n              </div>\n            </form>`\n    );\n  }\n};\nexport const Switch = {\n  args: {\n    label: 'Wifi Settings',\n    value: 'Airplane Mode',\n    help: 'A clever desciption of this field',\n    checked: false,\n    required: false,\n    disabled: false\n  },\n  render: ({\n    label,\n    required,\n    checked,\n    disabled,\n    help,\n    value,\n    ...args\n  }) => {\n    return (/* html */`<form>\n              <div class=\"group\">\n                <label for=\"wifi\">${label}</label>\n                <div>\n                  <input type=\"checkbox\" id=\"wifi\" class=\"switch\" ${checked ? 'checked' : ''} ${required ? 'required' : ''} ${disabled ? 'disabled' : ''}>\n                  <label for=\"wifi\">${value}</label>\n                </div>\n                <span>${help}</span>\n              </div>\n            </form>`\n    );\n  }\n};\nexport const Radio = {\n  args: {\n    label: 'Meal Preference',\n    values: ['Beef', 'Chicken', 'Fish'],\n    help: 'A clever desciption of this field',\n    checked: false,\n    required: false,\n    disabled: false\n  },\n  render: ({\n    label,\n    required,\n    checked,\n    disabled,\n    help,\n    values,\n    ...args\n  }) => {\n    return (/* html */`<form>\n              <div class=\"group\">\n                <label for=\"meal\">${label}</label>\n                <div>\n                  ${values.map(value => {\n        return (/* html */`\n                              <input id=\"${value}\" type=\"radio\" name=\"meal\" ${checked ? 'checked' : ''} ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''}>\n                              <label for=\"${value}\">${value}</label>\n                          `\n        );\n      }).join(' ')}\n                </div>\n                <span>${help}</span>\n              </div>\n            </form>`\n    );\n  }\n};\nTextField.parameters = {\n  ...TextField.parameters,\n  docs: {\n    ...TextField.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'First Name',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: false\\n  },\\n  render: ({\\n    label,\\n    required,\\n    disabled,\\n    help,\\n    ...args\\n  }) => {\\n    // You can either use a function to create DOM elements or use a plain html string!\\n    // return `<div>${label}</div>`;\\n    return (/* html */`<form>\\n              <div class=\\\"group\\\">\\n                <label for=\\\"name\\\">${label}</label>\\n                <input type=\\\"text\\\" id=\\\"name\\\" placeholder=\\\"Placeholder\\\" ${required ? 'required' : ''} ${disabled ? 'disabled' : ''}/>\\n                <span>${help}</span>\\n              </div>\\n            </form>`\\n    );\\n  }\\n}\",\n      ...TextField.parameters?.docs?.source\n    }\n  }\n};\nTextArea.parameters = {\n  ...TextArea.parameters,\n  docs: {\n    ...TextArea.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'First Name',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: false\\n  },\\n  render: ({\\n    label,\\n    required,\\n    disabled,\\n    help,\\n    ...args\\n  }) => {\\n    return (/* html */`<form>\\n              <div class=\\\"group\\\">\\n                <label for=\\\"name\\\">${label}</label>\\n                <textarea type=\\\"text\\\" id=\\\"name\\\" placeholder=\\\"Placeholder\\\" ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''}></textarea>\\n                <span>${help}</span>\\n              </div>\\n            </form>`\\n    );\\n  }\\n}\",\n      ...TextArea.parameters?.docs?.source\n    }\n  }\n};\nSelect.parameters = {\n  ...Select.parameters,\n  docs: {\n    ...Select.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Favorite Car Manufacturer',\\n    value: 'Airplane Mode',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: false\\n  },\\n  render: ({\\n    label,\\n    required,\\n    disabled,\\n    help,\\n    value,\\n    ...args\\n  }) => {\\n    return (/* html */`<form>\\n              <div class=\\\"group\\\">\\n                <label for=\\\"car\\\">${label}</label>\\n                <div class=\\\"select\\\">\\n                  <select id=\\\"car\\\" ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''}>\\n                    <option value=\\\"\\\" disabled selected hidden>Select car:</option>\\n                    <option value=\\\"1\\\">Audi</option>\\n                    <option value=\\\"2\\\">BMW</option>\\n                    <option value=\\\"3\\\">Citroen</option>\\n                    <option value=\\\"4\\\">Ford</option>\\n                    <option value=\\\"5\\\">Honda</option>\\n                    <option value=\\\"6\\\">Jaguar</option>\\n                    <option value=\\\"7\\\">Land Rover</option>\\n                    <option value=\\\"8\\\">Mercedes</option>\\n                    <option value=\\\"9\\\">Mini</option>\\n                    <option value=\\\"10\\\">Nissan</option>\\n                    <option value=\\\"11\\\">Toyota</option>\\n                    <option value=\\\"12\\\">Volvo</option>\\n                  </select>\\n                </div>\\n                <span>${help}</span>\\n              </div>\\n            </form>`\\n    );\\n  }\\n}\",\n      ...Select.parameters?.docs?.source\n    }\n  }\n};\nCheckbox.parameters = {\n  ...Checkbox.parameters,\n  docs: {\n    ...Checkbox.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Agree to Terms',\\n    value: 'Completed Task',\\n    help: 'A clever desciption of this field',\\n    checked: false,\\n    required: false,\\n    disabled: false\\n  },\\n  render: ({\\n    label,\\n    required,\\n    checked,\\n    disabled,\\n    help,\\n    value,\\n    ...args\\n  }) => {\\n    return (/* html */`<form>\\n              <div class=\\\"group\\\">\\n                <label for=\\\"terms\\\">${label}</label>\\n                <div>\\n                  <input type=\\\"checkbox\\\" id=\\\"terms\\\" ${checked ? 'checked' : ''}  ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''} onclick=\\\"(event) => event.target.checked = true\\\">\\n                  <label for=\\\"terms\\\">${value}</label>\\n                </div>\\n                <span>${help}</span>\\n              </div>\\n            </form>`\\n    );\\n  }\\n}\",\n      ...Checkbox.parameters?.docs?.source\n    }\n  }\n};\nSwitch.parameters = {\n  ...Switch.parameters,\n  docs: {\n    ...Switch.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Wifi Settings',\\n    value: 'Airplane Mode',\\n    help: 'A clever desciption of this field',\\n    checked: false,\\n    required: false,\\n    disabled: false\\n  },\\n  render: ({\\n    label,\\n    required,\\n    checked,\\n    disabled,\\n    help,\\n    value,\\n    ...args\\n  }) => {\\n    return (/* html */`<form>\\n              <div class=\\\"group\\\">\\n                <label for=\\\"wifi\\\">${label}</label>\\n                <div>\\n                  <input type=\\\"checkbox\\\" id=\\\"wifi\\\" class=\\\"switch\\\" ${checked ? 'checked' : ''} ${required ? 'required' : ''} ${disabled ? 'disabled' : ''}>\\n                  <label for=\\\"wifi\\\">${value}</label>\\n                </div>\\n                <span>${help}</span>\\n              </div>\\n            </form>`\\n    );\\n  }\\n}\",\n      ...Switch.parameters?.docs?.source\n    }\n  }\n};\nRadio.parameters = {\n  ...Radio.parameters,\n  docs: {\n    ...Radio.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Meal Preference',\\n    values: ['Beef', 'Chicken', 'Fish'],\\n    help: 'A clever desciption of this field',\\n    checked: false,\\n    required: false,\\n    disabled: false\\n  },\\n  render: ({\\n    label,\\n    required,\\n    checked,\\n    disabled,\\n    help,\\n    values,\\n    ...args\\n  }) => {\\n    return (/* html */`<form>\\n              <div class=\\\"group\\\">\\n                <label for=\\\"meal\\\">${label}</label>\\n                <div>\\n                  ${values.map(value => {\\n        return (/* html */`\\n                              <input id=\\\"${value}\\\" type=\\\"radio\\\" name=\\\"meal\\\" ${checked ? 'checked' : ''} ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''}>\\n                              <label for=\\\"${value}\\\">${value}</label>\\n                          `\\n        );\\n      }).join(' ')}\\n                </div>\\n                <span>${help}</span>\\n              </div>\\n            </form>`\\n    );\\n  }\\n}\",\n      ...Radio.parameters?.docs?.source\n    }\n  }\n};"],"names":["forms_stories","TextField","label","required","disabled","help","args","TextArea","Select","value","Checkbox","checked","Switch","Radio","values","__namedExportsOrder"],"mappings":"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"}